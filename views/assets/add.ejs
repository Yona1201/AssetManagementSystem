<div class="d-flex justify-content-between flex-wrap flex-md nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
  <h1 class="h2">Asset</h1>
  <div class="btn-toolbar mb-2 mb-md 0">
    <div class="btn-group me-2">
      <button class="btn btn-sm btn-outline-secondary">?</button>
    </div>
  </div>
</div>

<div class="col py-3">
  <div class="row">
    <div class="col">
      <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
          <li class="breadcrumb-item"><a href="/">Dashboard</a></li>
          <li class="breadcrumb-item active">New Asset</li>
        </ol>
      </nav>
    </div>
  </div>
</div>

<div id="notification"></div>

<form method="POST" id="form_add">

  <div class="row">
    <div class="col-4 mb-3">
      <img hidden src="" id="image" style="border-radius: 30px; height: 100px; width: 100px" alt="" />
    </div>
    <input type="file" class="mb-2" id="imageInput" name="image" />
  </div>

  <div class="row form-group mb-4">
    <div class="col">
      <label for="firstName">Name</label>
      <input type="text" class="form-control" id="inputName" name="firstName" value="" placeholder="Name Asset"
        required />
    </div>
  </div>

  <div class="form-group mb-4">
    <label for="price">Pricee</label>
    <input type="number" id="price" class="form-control" placeholder="200" />
  </div>
  <div class="form-group mb-4">
    <label for="category" class="mb-2">Category</label>
    <select name="" class="form-control" id="category">
      <option value="">Pilih Kategori</option>
    </select>
  </div>
  <div class="form-group mb-4">
    <button type="button" onclick="addAsset()" class="btn btn-primary">
      Add Asset
    </button>
  </div>
</form>
<script>
  var token = sessionStorage.getItem("token")

  let notif = document.getElementsByClassName("notifications");

  var token = sessionStorage.getItem("token")

  const imageInput = document.getElementById('imageInput');
  const image = document.getElementById('image');
  imageInput.addEventListener('change', function (e) {
    if (e.target.files && e.target.files[0]) {
      const reader = new FileReader();
      reader.onload = function (e) {
        image.src = e.target.result;
        image.removeAttribute("hidden")
      };
      reader.readAsDataURL(e.target.files[0]);
    }
  });

  async function addAsset() {
    const name = document.getElementById("inputName").value;
    const price = document.getElementById("price").value;
    const imageInput = document.getElementById('imageInput');
    const imageFile = imageInput.files[0];
    const kategori = document.getElementById('category').value;


    const formData = new FormData();
    formData.append('nama', name)
    formData.append('price', price)
    formData.append('image', imageFile)
    formData.append('kategori', kategori)


    var result = await fetch("/api/assets", {
      method: "POST",
      headers: {
        "Authorization": `Bearer ${token}`
      },
      body: formData, 
    });
    var response = await result.json();
    if (result.ok) {
      const alertElement = document.createElement("div");
      alertElement.classList.add("alert", "alert-success", "role", "alert");
      alertElement.textContent = "Data berhasil ditambahkan!";
      // Sisipkan alert ke dalam DOM
      const targetElement = document.getElementById("notification"); // Ubah `target-element-id` dengan ID elemen yang ingin Anda jadikan target
      targetElement.appendChild(alertElement);

      setTimeout(() => {
        alertElement.remove();
        window.location = "/assets";
      }, 3000);
    } else {
      const alertElement = document.createElement("div");
      alertElement.classList.add("alert", "alert-danger", "role", "alert");
      alertElement.textContent = response.error;
      // Sisipkan alert ke dalam DOM
      const targetElement = document.getElementById("notification"); // Ubah `target-element-id` dengan ID elemen yang ingin Anda jadikan target
      targetElement.appendChild(alertElement);

      // Sembunyikan alert setelah beberapa detik (opsional)
      setTimeout(() => alertElement.remove(), 3000);
    }
  }

  async function getCategories() {
    try {
      const response = await fetch("/api/categories", {
        method: "GET",
        headers: {
          Authorization: `Bearer ${token}`,
        }
      });

      if (!response.ok) {
        throw new Error("Failed to fetch categories");
      }

      const categories = await response.json();
      const selectElement = document.getElementById("category");

      categories.forEach((category) => {
        const option = document.createElement("option");
        option.value = category._id; // Ganti _id dengan properti yang sesuai dari respons API
        option.textContent = category.nama; // Ganti nama dengan properti yang sesuai dari respons API
        selectElement.appendChild(option);
      });
    } catch (error) {
      console.error(error);
      window.location = "/auth"

    }
  }

  getCategories();

  document
    .getElementById("form_add")
    .addEventListener("submit", function (event) {
      event.preventDefault(); // Prevent the default form submission behavior
    });
</script>